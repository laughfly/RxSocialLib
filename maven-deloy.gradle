apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)

def configFile = rootProject.file("local.properties")
// Initialize a new Properties() object called keystorePro perties.
def configProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
if (configFile.exists()) {
    configProperties.load(new FileInputStream(configFile))
}

publish {
    userOrg = USER_ORG
    groupId = GROUP_ID
    artifactId = ARTIFACT_ID
    publishVersion = DELOY_VERSION
    website = GITHUB_URL
    desc = DESC
    repoName = REPO_NAME
    bintrayUser = configProperties['bintray.user']
    bintrayKey = configProperties['bintray.key']
}

apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(project.rootDir.getAbsolutePath() + '/repo'))
            pom.groupId = GROUP_ID
            pom.artifactId = ARTIFACT_ID
            pom.version = DELOY_VERSION
            pom.packaging = PACKAGING

            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                dependenciesNode.children().clear()
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified' && it.version != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}