apply plugin: 'com.android.application'

def configFile = file("social-config.properties")
// Initialize a new Properties() object called keystorePro perties.
def configProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
if (configFile.exists()) {
    configProperties.load(new FileInputStream(configFile))
}

android {
    compileSdkVersion versions.targetSdk
    defaultConfig {
        applicationId configProperties['applicationId']
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file(configProperties['keystoreFile'])
            keyAlias configProperties['keyAlias']
            storePassword configProperties['storePassword']
            keyPassword configProperties['keyPassword']
        }
        release {
            storeFile file(configProperties['keystoreFile'])
            keyAlias configProperties['keyAlias']
            storePassword configProperties['storePassword']
            keyPassword configProperties['keyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.android.appcompat
    implementation deps.android.recyclerview
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-alpha5'
    debugImplementation ('com.squareup.leakcanary:leakcanary-android:1.6.3') {
        exclude group : 'com.android.support'
    }
    releaseImplementation ('com.squareup.leakcanary:leakcanary-android-no-op:1.6.3') {
        exclude group : 'com.android.support'
    }

    implementation deps.rxjava
    implementation deps.rxjava2
}

apply from:'social-config.gradle'
